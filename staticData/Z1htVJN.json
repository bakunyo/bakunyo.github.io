{"post":{"id":43,"path":"/2017/12/17/amazon-vpc/","date":"2017/12/17 13:30","title":"Amazpn VPCで踏み台経由でログインできるネットワーク環境をつくってみる","tags":["aws","vpc"],"body":"<h1>背景</h1>\n<p>個人開発で\b使える\b本番サーバー環境が欲しかったのと、ちょうど仕事でも活かせそうだったので、自分でAWSのネットワーク環境を作ってみました。</p>\n<h1>全体像</h1>\n<p>用意したいサーバーは2つです。</p>\n<ul>\n<li>踏み台\n<ul>\n<li>sshでログインし、さらにsshで本番サーバーへログインするためのもの</li>\n<li>ssh\b\bログイン用のport以外は開けない</li>\n</ul>\n</li>\n<li>\b本番サーバー\n<ul>\n<li>踏み台サーバーからのみsshでログイン可能</li>\n<li>(Webサーバーを予定してるけど、\b今回はhttpのportを開けたりとかしない)</li>\n</ul>\n</li>\n</ul>\n<h1>VPCの作成</h1>\n<p>AWSで管理する仮想ネットワークを定義します。</p>\n<h4>AWSマネジメントコンソールからサービス＞VPCを選択</h4>\n<p><img src=\"https://s3-ap-northeast-1.amazonaws.com/bakunote-images/2017/12/17-amazon-vpc/images/1-dashboard.png\" alt=\"vpc-dashboard\"></p>\n<p>既にデフォルトのVPCが定義されていますが、今回は使わずに削除します。</p>\n<h4>「VPCの作成」を選択</h4>\n<p><img src=\"https://s3-ap-northeast-1.amazonaws.com/bakunote-images/2017/12/17-amazon-vpc/images/2-create-vpc.png\" alt=\"vpc-create\"></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"></th>\n<th style=\"text-align:left\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Name</td>\n<td style=\"text-align:left\">vpc-sample</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IPv4 CIDR ブロック</td>\n<td style=\"text-align:left\">192.168.0.0/16</td>\n</tr>\n</tbody>\n</table>\n<p>CIDR ブロックは、仮想ネットワーク内のIPアドレスの範囲を指定します。<br>\n今回は <code>192.168.0.0</code> ~ <code>192.168.255.255</code> で 65,536 個のIPアドレスを持つことになります。<br>\n<a href=\"http://docs.aws.amazon.com/ja_jp/AmazonVPC/latest/UserGuide/VPC_Subnets.html\">VPC とサブネット</a></p>\n<p>CIDRブロックは 16~28の間で指定する必要があるようです。</p>\n<h1>サブネットの作成</h1>\n<p>上で作成したVPCの中でネットワークを小分けにします。</p>\n<h4>VPCダッシュボードの中から「サブネット」を選択</h4>\n<p><img src=\"https://s3-ap-northeast-1.amazonaws.com/bakunote-images/2017/12/17-amazon-vpc/images/3-subnet-dashboard.png\" alt=\"subnet-dashboard\"><br>\n「サブネットの作成」を選択し、以下2つのサブネットを作成しました。</p>\n<h4>1つ目</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"></th>\n<th style=\"text-align:left\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">名前タグ</td>\n<td style=\"text-align:left\">subnet-sample-public</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">VPC</td>\n<td style=\"text-align:left\">{作成\bしたvpc-sampleがデフォルトで選択されている}</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">アベイラビリティゾーン</td>\n<td style=\"text-align:left\">ap-northeast-1a</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IPv4 CIDR ブロック</td>\n<td style=\"text-align:left\">192.168.1.0/24</td>\n</tr>\n</tbody>\n</table>\n<h4>2つ目</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"></th>\n<th style=\"text-align:left\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">名前タグ</td>\n<td style=\"text-align:left\">subnet-sample-private</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">VPC</td>\n<td style=\"text-align:left\">{作成\bしたvpc-sampleがデフォルトで選択されている}</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">アベイラビリティゾーン</td>\n<td style=\"text-align:left\">ap-northeast-1a</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IPv4 CIDR ブロック</td>\n<td style=\"text-align:left\">192.168.2.0/24</td>\n</tr>\n</tbody>\n</table>\n<p>1つ目が踏み台用、2つ目が本番用という想定です。<br>\nそれぞれ256個ずつIPアドレスを持つことになります。</p>\n<p>アベイラビリティゾーンは東京では <code>ap-northeact-1a</code> <code>ap-northeast-1c</code> の2択\bですが、どちらが具体的にどこの場所、というのはなく、仮想ネットワーク毎にAWS側で振り分けられるそうです。<br>\nなので、 「 <code>1a</code> は沢山\bの人が選んで混んでそうだからa <code>1c</code> にしよう」みたいなことは意味がないらしいです。<br>\n\b情報元は\bどこかのネット記事で読んだのですがどこかへ行ってしまいました。。</p>\n<h1>インターネットゲートウェイの作成</h1>\n<p>仮想ネットワークをインターネットと繋げる為に、インターネットゲートウェイを作成します。<br>\nVPCダッシュボードからインターネットゲートウェイ＞インターネットゲートウェイの作成を\b選択<br>\n<img src=\"https://s3-ap-northeast-1.amazonaws.com/bakunote-images/2017/12/17-amazon-vpc/images/10-create-igw.png\" alt=\"create-igw\"><br>\n名前は <code>igw-sample</code> としておきます。</p>\n<h1>ルートテーブルの作成</h1>\n<p>\b\b上で作成したインターネットゲートウェイを紐付けるためのルートテーブルを作成します。<br>\nルートテーブル＞ルートテーブルの作成を選択し、 <code>rtb-sample</code> を指定します。<br>\n作成後、 <code>0.0.0.0/0</code> (デフォルトゲートウェイとして) インターネットゲートウェイを紐付けます。<br>\n<img src=\"https://s3-ap-northeast-1.amazonaws.com/bakunote-images/2017/12/17-amazon-vpc/images/11-create-rtb.png\" alt=\"create-rtb\"><br>\nさらに、「サブネットの関連付け」で踏み台用のサブネットである <code>subnet-sample-public</code> を紐付けます。</p>\n<h1>EC2（\b踏み台）の作成</h1>\n<p>いよいよサーバーです。<br>\nサービス＞EC2＞インスタンスから「インスタンスの作成」を選択<br>\n<a href=\"https://aws.amazon.com/jp/blogs/news/amazon-linux-2-release/\">ちょうど数日前にリリースされたAmazon Linux 2</a> が無料枠で選べる状態だったので、これを選択します。</p>\n<p><img src=\"https://s3-ap-northeast-1.amazonaws.com/bakunote-images/2017/12/17-amazon-vpc/images/5-create-ec2.png\" alt=\"create-ec2-1\"></p>\n<p><code>t2.micro</code> を選択します。</p>\n<p><img src=\"https://s3-ap-northeast-1.amazonaws.com/bakunote-images/2017/12/17-amazon-vpc/images/6-create-ec2.png\" alt=\"create-ec2-2\"></p>\n<p>インスタンスの詳細設定です。<br>\n<img src=\"https://s3-ap-northeast-1.amazonaws.com/bakunote-images/2017/12/17-amazon-vpc/images/7-create-ec2.png\" alt=\"create-ec2-3\"></p>\n<p>ちょっと項目数が多いのでかいつまんで。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"></th>\n<th style=\"text-align:left\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">ネットワーク</td>\n<td style=\"text-align:left\">vpc-sample</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">サブネット</td>\n<td style=\"text-align:left\">subnet-sample-public</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">自動割り当てパブリックIP</td>\n<td style=\"text-align:left\">有効化</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">プライマリIP</td>\n<td style=\"text-align:left\">192.168.1.10</td>\n</tr>\n</tbody>\n</table>\n<p>ここは若干ハマってしまった所なのですが、プライマリIPを <code>192.168.1.1</code> に指定したら、最後のEC2作成のフェーズでエラーになってしまいました。<br>\nプライマリIPは先頭と末尾（<code>192.168.1.0</code> <code>192.168.1.255</code>）だけ避ければ良いと思っていたのですが、他にも <code>192.168.1.1</code> <code>192.168.1.2</code> <code>192.168.1.3</code> は予約済アドレスとなるようです。<br>\n\bプライマリIPはわざわざ指定しなくても良かったかもしれないです。</p>\n<p>参考： <a href=\"http://blog.serverworks.co.jp/tech/2013/05/23/vpc_beginner-2/\">VPC初心者がハマりやすいポイントをまとめてみた</a></p>\n<p>次はストレージの追加です。<br>\n<img src=\"https://s3-ap-northeast-1.amazonaws.com/bakunote-images/2017/12/17-amazon-vpc/images/8-create-ec2.png\" alt=\"create-ec2-4\"><br>\nデフォルトのまま進めます。<br>\n<img src=\"https://s3-ap-northeast-1.amazonaws.com/bakunote-images/2017/12/17-amazon-vpc/images/8-create-tag.png\" alt=\"create-ec2-5\"><br>\n<code>Name</code> タグに <code>bastion</code> を指定します。</p>\n<p><img src=\"https://s3-ap-northeast-1.amazonaws.com/bakunote-images/2017/12/17-amazon-vpc/images/9-create-ec2.png\" alt=\"create-ec2-6\"><br>\n<img src=\"https://s3-ap-northeast-1.amazonaws.com/bakunote-images/2017/12/17-amazon-vpc/images/9-create-sg.png\" alt=\"create-ec2-7\"></p>\n<p>「新しいセキュリティグループを作成する」を選択し、セキュリティグループ名を <code>bastion-sg</code> とします。<br>\nセキュリティグループの指定で、sshで <code>22</code> をどこからでも受けられるようにします。</p>\n<p>「確認と作成」をクリックして、キーペアを作成してダウンロードしたら完了です。</p>\n<h1>EC2(本番用)の作成</h1>\n<p>ほぼ踏み台と同じなので、違うところだけピックアップします。</p>\n<h3>詳細設定</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"></th>\n<th style=\"text-align:left\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">サブネット</td>\n<td style=\"text-align:left\">subnet-sample-private</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">自動割り当てパブリックIP</td>\n<td style=\"text-align:left\">サブネット設定を使用（無効）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">プライマリIP</td>\n<td style=\"text-align:left\">192.168.2.10</td>\n</tr>\n</tbody>\n</table>\n<h3>タグ</h3>\n<p><code>Name</code> タグに <code>webserver</code> を指定します。</p>\n<h3>セキュリティグループ</h3>\n<p>「新しいセキュリティグループを作成する」を選択し、セキュリティグループ名を <code>web-sg</code> とします。<br>\nセキュリティグループの指定で、sshで <code>22</code> を <code>192.168.1.0/24</code> からのみ受けられるようにします。（ここポイントです）</p>\n<h3>キーペア</h3>\n<p>踏み台で作成したものと同じものを使うようにします。</p>\n<h1>sshログインしてみる</h1>\n<p>踏み台→本番への接続も同じキーペアで通せるように、以下のコマンドを打ちます。</p>\n<pre><code class=\"hljs bash\">ssh-add {pemファイルのパス}\nssh-add -l <span class=\"hljs-comment\"># 登録できたか確認</span>\n</code></pre>\n<p>まずは踏み台のログインです。</p>\n<pre><code class=\"hljs bash\">ssh -i {pemファイルのパス} ec2-user@{踏み台に割当てられたパブリックIP}\n</code></pre>\n<p>ログインできたら、\b本番に指定したプライベートIPを使ってさらにsshログインします。</p>\n<pre><code class=\"hljs bash\">$ ssh \b192.168.2.10 <span class=\"hljs-comment\"># 本番用に指定したプライベートIP</span>\nLast login: Sun Dec 17 06:01:04 2017 from 192.168.1.10\n\n       __|  __|_  )\n       _|  (     /   Amazon Linux 2 AMI\n      ___|\\___|___|\n\nhttps://aws.amazon.com/amazon-linux-2/\n</code></pre>\n<p>これでログイン完了です！</p>\n<h3>ssh/configの設定</h3>\n<p>踏み台を通して1発で本番へログインできるようにするための設定です。<br>\n<code>~/.ssh/config</code> に記述します。</p>\n<pre><code class=\"hljs bash\">Host {踏み台用の好きな名前}\n  HostName {踏み台パブリックIP}\n  User ec2-user\n  IdentityFile {pemファイルのパス}\n\nHost {本番用の好きな名前}\n  HostName {本番用プライベートIP}\n  User ec2-user\n  IdentityFile {pemファイルのパス}\n  ProxyCommand ssh {踏み台用の好きな名前} -W %h:%p\n</code></pre>\n<p>上記を指定しておけば、 <code>ssh {本番用の好きな名前}</code> でログインできます。</p>\n"}}