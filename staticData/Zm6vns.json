{"post":{"id":37,"path":"/2016/09/20/jekyll_to_middleman/","date":"2016/09/20 21:15","title":"Jekyll -> Middleman-blogに移行しました","tags":["middleman","jekyll","blog"],"body":"<p>ブログエンジンを<a href=\"https://jekyllrb.com/\">Jekyll</a> -&gt; <a href=\"https://github.com/middleman/middleman-blog\">Middleman-blog</a>に移行しました。<br>\n移行した一番の理由は、<a href=\"https://shopify.github.io/liquid/\">Liquid</a>記法（<code>{% %}</code>みたいなの）にいまいち慣れなかったことです。</p>\n<p><img src=\"https://s3-ap-northeast-1.amazonaws.com/bakunote-images/2016/09/20-jekyll_to_middleman/images/thumbnail.png\" alt=\"middleman-logo\"></p>\n<h2>移行に際してやったこと</h2>\n<h3>デザイン・レイアウト</h3>\n<p>jekyllの時は <a href=\"https://jekyllthemes.io/\">Jekyll Themes &amp; Template</a> の中から選んでそのデザインを使っていたのですが、今回は自分でカスタマイズしやすいようThemeを使わないことにしました。</p>\n<p>まず、CSSフレームワークとして <a href=\"http://foundation.zurb.com/\">Foundation</a> を使いました。<br>\n数年前にver.5が出たと思ったのですが、もうver.6がリリースされているんですね…。<br>\n軽量・シンプルでドキュメントもしっかりしていて使いやすかったです。</p>\n<p>独自スタイルの追加は <a href=\"http://sass-lang.com/\">Sass</a> で書いて、 <a href=\"https://webpack.github.io/\">webpack</a> でCompileしています。<br>\nJSはES2015で書けるようにしています。が、まだ特に書いてはいないです^^;</p>\n<p>Middlemanには <a href=\"https://middlemanapp.com/jp/advanced/external-pipeline/\">外部パイプライン</a> という機能があり、<code>middleman server</code> や <code>middleman build</code>の時にフロントエンドのコマンドを実行するよう設定できます。</p>\n<pre><code class=\"hljs ruby\">activate <span class=\"hljs-symbol\">:external_pipeline</span>,\n  <span class=\"hljs-symbol\">name:</span> <span class=\"hljs-symbol\">:webpack</span>,\n  <span class=\"hljs-symbol\">command:</span> build? ? <span class=\"hljs-string\">\"./node_modules/webpack/bin/webpack.js --bail\"</span> : <span class=\"hljs-string\">\"./node_modules/webpack/bin/webpack.js --watch -d\"</span>,\n  <span class=\"hljs-symbol\">source:</span> <span class=\"hljs-string\">\".tmp/dist\"</span>,\n  <span class=\"hljs-symbol\">latency:</span> <span class=\"hljs-number\">1</span>\n</code></pre>\n<h3>テンプレート</h3>\n<p>Railsの開発で慣れている<a href=\"http://slim-lang.com/\">Slim</a>を採用しました。<br>\n<code>erb</code>書いてる時に比べて精神状態が良好に保たれます。</p>\n<p>微妙にハマったのが<code>partial</code>の書き方で、<a href=\"https://middlemanapp.com/jp/basics/upgrade-v4/\">v4 へのアップグレード</a>にもあるように、<code>partials_dir</code>の設定オプションが無くなっています。<br>\n部分テンプレートの指定は<code>source</code>からの相対パスで<code>partial 'partials/my_partial'</code>のように書くことになります。</p>\n<p>また、特に指定をしなければ<code>partials</code>以下もビルド対象となってしまうので、ビルド対象外として設定すると良いです。</p>\n<pre><code class=\"hljs ruby\">ignore <span class=\"hljs-string\">'partials/*'</span>\n</code></pre>\n<p>これは<strong>開発時に気づきにくい罠</strong>でした。</p>\n<h3>記事の移行</h3>\n<p>元々Jekyllの記事は <a href=\"http://jekyllrb-ja.github.io/docs/frontmatter/\">Front-matter</a> + Markdown で書いていたので、ほぼそのままMiddleman-blogにコピーするだけで完了しました。</p>\n<h3>ファイル圧縮</h3>\n<p>アセットを圧縮するための設定がデフォルトで用意されています。</p>\n<pre><code class=\"hljs ruby\">configure <span class=\"hljs-symbol\">:build</span> <span class=\"hljs-keyword\">do</span>\n  activate <span class=\"hljs-symbol\">:minify_css</span>\n  activate <span class=\"hljs-symbol\">:minify_javascript</span>\n<span class=\"hljs-keyword\">end</span>\n\nactivate <span class=\"hljs-symbol\">:minify_html</span>\n</code></pre>\n<p>まだやれてないですが、画像の圧縮には<a href=\"https://github.com/plasticine/middleman-imageoptim\">middleman-imageoptim</a>を使うと良さそうです。</p>\n<h3>デプロイ</h3>\n<p><a href=\"https://github.com/middleman-contrib/middleman-deploy\">middleman-deploy</a>が便利です。<br>\n自分は<a href=\"https://pages.github.com/\">GitHub Pages</a>で公開しているので、<code>master</code>ブランチにPushして完了です。</p>\n<pre><code class=\"hljs ruby\">activate <span class=\"hljs-symbol\">:deploy</span> <span class=\"hljs-keyword\">do</span> <span class=\"hljs-params\">|deploy|</span>\n  deploy.deploy_method = <span class=\"hljs-symbol\">:git</span>\n  deploy.branch = <span class=\"hljs-string\">'master'</span> <span class=\"hljs-comment\"># default: gh-pages</span>\n  deploy.build_before = <span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\"># default: false</span>\n<span class=\"hljs-keyword\">end</span>\n</code></pre>\n<h2>感想</h2>\n<p>控えめに言って <a href=\"https://middlemanapp.com/jp/\">Middleman</a> 最高でした！<br>\nサイト作るのに必要だなと思うものがデフォルトで付いてたり拡張として用意してあって、たくさん楽できました。<br>\nあとはRailsライクな <a href=\"https://middlemanapp.com/jp/basics/helper_methods/\">ヘルパーメソッド</a> も用意してあるし、とにかくハードルが低かったです。</p>\n"}}