{"post":{"id":41,"path":"/2017/05/27/elixir-introduction/","date":"2017/05/27 17:01","title":"Elixir入門","tags":["elixir","erlang"],"body":"<p>2017/06/02 に行われた <a href=\"https://beam-lang.connpass.com/event/51637/\">Elixir入門者LT大会</a> へ参加する際、事前に準備しておいたことのメモ。</p>\n<h2>Elixirとは？</h2>\n<h4>公式サイト</h4>\n<p><a href=\"https://elixir-lang.org/\">https://elixir-lang.org/</a></p>\n<ul>\n<li>スケーラブルで持続可能なアプリを作るためにデザインされた動的関数型言語</li>\n<li>Erlang VM上で動いている。\n<ul>\n<li>Erlang VMは、レイテンシが低く、配布可能で耐障害性もあり、Webでも組み込みシステムでも利用されている</li>\n</ul>\n</li>\n<li>特徴\n<ul>\n<li>関数型</li>\n<li>拡張可能なDSL</li>\n</ul>\n</li>\n<li>その他の特徴\n<ul>\n<li>Ecosystem(mix)</li>\n<li>Interactive Development</li>\n<li>Erlang互換</li>\n</ul>\n</li>\n</ul>\n<h2>インストール</h2>\n<p>Macの場合</p>\n<pre><code class=\"hljs bash\">brew update\nbrew install elixir\n</code></pre>\n<p><a href=\"https://elixir-lang.org/install.html\">その他の場合</a></p>\n<h2>基本</h2>\n<p>Elixir Schoolより</p>\n<ul>\n<li><code>iex</code> でREPLを起動</li>\n<li>真偽判定: <code>false</code> と <code>nil</code> 以外は真</li>\n<li>アトム <code>:foo</code> はRubyのシンボルと同じ</li>\n<li><code>true === :true</code> は真</li>\n<li>モジュール名もアトム。宣言されていなくても。 <code>is_atom(MyApp)</code> は真</li>\n<li>アトムは、Erlangのビルトインも含めたモジュール参照にも使われる。 <code>:crypto.rand_bytes 3</code></li>\n<li>どんな型同士も比較可能、ソート可能</li>\n<li>文字の連結は <code>&quot;Hello, &quot; &lt;&gt; &quot;Elixir&quot;</code></li>\n</ul>\n<h2>参考</h2>\n<p>公式サイト<br>\n<a href=\"https://elixir-lang.org/\">https://elixir-lang.org/</a></p>\n<p>Elixir School(日本語あり)<br>\n<a href=\"https://elixirschool.com\">https://elixirschool.com</a></p>\n<h2>イベントに参加した時のメモ</h2>\n<h3>guest1 @ohrdev おーはらさん</h3>\n<h4>なぜElixir</h4>\n<ul>\n<li>\n<p>可用性◯</p>\n</li>\n<li>\n<p>速度× =&gt; C, golangの方が</p>\n</li>\n<li>\n<p>今持っていない考え方が身につく？</p>\n<ul>\n<li>アクターモデル</li>\n<li>関数プログラミング、マクロ、プロトコル</li>\n<li>並行プログラミング、OTP</li>\n</ul>\n</li>\n<li>\n<p>適当な問題</p>\n<ul>\n<li>並列処理が効くツール\n<ul>\n<li>クローラー</li>\n<li>chat, mastodon cloneとか？</li>\n</ul>\n</li>\n<li>ライブラリ制作\n<ul>\n<li>マクロを使う必要がある(メタプログラミング)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>guest2 さっちゃん</h3>\n<ul>\n<li>phoenix new しとけばRailsみたく開発できる。Webはだいたいいける</li>\n<li>dockerで環境をつくって、環境差異をなくした</li>\n<li>lint: 開発の最初から入れる必要がある\n<ul>\n<li>dogma, credoの2つがある(credoの方が盛ん)</li>\n<li>dialyzer: flowtypeみたく型を指定できる\n<ul>\n<li>但し、めちゃくちゃ遅い(最初に型情報のDBを生成する)</li>\n</ul>\n</li>\n<li>test: ExUnit\n<ul>\n<li>関数合成だけで構築できると信じるとテストが書きやすくなる</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>awesome-elixer\n<ul>\n<li>ライブラリの選定に有用</li>\n<li>elixir公式MLでも情報とれる</li>\n</ul>\n</li>\n<li>別の言語で学ぶ\n<ul>\n<li>Haskell, Lisp, Scala</li>\n</ul>\n</li>\n<li>プロセスの役割\n<ul>\n<li>タスクを分割する</li>\n<li>状態を持つ</li>\n</ul>\n</li>\n</ul>\n<h3>LT</h3>\n<h4>@color_box</h4>\n<ul>\n<li>\n<p>とりあえず HexDoc</p>\n</li>\n<li>\n<p>erlang ライブラリ多い</p>\n</li>\n<li>\n<p>REPL環境が良い</p>\n</li>\n<li>\n<p>iex -S mix でライブラリも参照できる</p>\n</li>\n<li>\n<p>パターンマッチの重要性</p>\n<ul>\n<li>case</li>\n<li>関数のシグネチャ<br>\n-&gt; 関数が小さくなるので、読みやすくなる</li>\n</ul>\n</li>\n</ul>\n<h4>@cedretaber</h4>\n<ul>\n<li>Bibliotheca 蔵書管理アプリ</li>\n<li>認証ライブラリを作った</li>\n</ul>\n<h4>@nunulk</h4>\n<ul>\n<li>ElixirでSlack botをつくっている</li>\n</ul>\n<h4>@yasuhiroki</h4>\n<ul>\n<li>シェル芸との共通点から好きになる</li>\n</ul>\n"}}