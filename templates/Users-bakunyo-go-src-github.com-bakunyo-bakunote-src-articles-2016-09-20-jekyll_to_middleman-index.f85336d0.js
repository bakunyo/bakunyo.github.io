(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{101:function(e,a,t){"use strict";t.r(a);var n=t(0),l=t.n(n),p=t(22),s=t.n(p),c=t(62),m=t.n(c),r=t(193),b={},o="wrapper";function j(e){var a=e.components,t=m()(e,["components"]);return Object(r.a)(o,s()({},b,t,{components:a,mdxType:"MDXLayout"}),Object(r.a)("p",null,"ブログエンジンを",Object(r.a)("a",s()({parentName:"p"},{href:"https://jekyllrb.com/"}),"Jekyll")," -> ",Object(r.a)("a",s()({parentName:"p"},{href:"https://github.com/middleman/middleman-blog"}),"Middleman-blog"),"に移行しました。\n移行した一番の理由は、",Object(r.a)("a",s()({parentName:"p"},{href:"https://shopify.github.io/liquid/"}),"Liquid"),"記法（",Object(r.a)("inlineCode",{parentName:"p"},"{% %}"),"みたいなの）にいまいち慣れなかったことです。"),Object(r.a)("p",null,Object(r.a)("img",s()({parentName:"p"},{src:"https://bakunote-images.s3-ap-northeast-1.amazonaws.com/storage/2019/09/16/12-38-26.png",alt:"middleman-logo"}))),Object(r.a)("h2",null,"移行に際してやったこと"),Object(r.a)("h3",null,"デザイン・レイアウト"),Object(r.a)("p",null,"jekyllの時は ",Object(r.a)("a",s()({parentName:"p"},{href:"https://jekyllthemes.io/"}),"Jekyll Themes & Template")," の中から選んでそのデザインを使っていたのですが、今回は自分でカスタマイズしやすいようThemeを使わないことにしました。"),Object(r.a)("p",null,"まず、CSSフレームワークとして ",Object(r.a)("a",s()({parentName:"p"},{href:"http://foundation.zurb.com/"}),"Foundation")," を使いました。\n数年前にver.5が出たと思ったのですが、もうver.6がリリースされているんですね…。\n軽量・シンプルでドキュメントもしっかりしていて使いやすかったです。"),Object(r.a)("p",null,"独自スタイルの追加は ",Object(r.a)("a",s()({parentName:"p"},{href:"http://sass-lang.com/"}),"Sass")," で書いて、 ",Object(r.a)("a",s()({parentName:"p"},{href:"https://webpack.github.io/"}),"webpack")," でCompileしています。\nJSはES2015で書けるようにしています。が、まだ特に書いてはいないです^^;"),Object(r.a)("p",null,"Middlemanには ",Object(r.a)("a",s()({parentName:"p"},{href:"https://middlemanapp.com/jp/advanced/external-pipeline/"}),"外部パイプライン")," という機能があり、",Object(r.a)("inlineCode",{parentName:"p"},"middleman server")," や ",Object(r.a)("inlineCode",{parentName:"p"},"middleman build"),"の時にフロントエンドのコマンドを実行するよう設定できます。"),Object(r.a)("pre",null,Object(r.a)("code",s()({parentName:"pre"},{className:"hljs language-ruby"}),"activate ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-symbol"}),":external_pipeline"),",\n  ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-symbol"}),"name:")," ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-symbol"}),":webpack"),",\n  ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-symbol"}),"command:")," build? ? ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-string"}),'"./node_modules/webpack/bin/webpack.js --bail"')," : ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-string"}),'"./node_modules/webpack/bin/webpack.js --watch -d"'),",\n  ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-symbol"}),"source:")," ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-string"}),'".tmp/dist"'),",\n  ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-symbol"}),"latency:")," ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-number"}),"1"))),Object(r.a)("h3",null,"テンプレート"),Object(r.a)("p",null,"Railsの開発で慣れている",Object(r.a)("a",s()({parentName:"p"},{href:"http://slim-lang.com/"}),"Slim"),"を採用しました。\n",Object(r.a)("inlineCode",{parentName:"p"},"erb"),"書いてる時に比べて精神状態が良好に保たれます。"),Object(r.a)("p",null,"微妙にハマったのが",Object(r.a)("inlineCode",{parentName:"p"},"partial"),"の書き方で、",Object(r.a)("a",s()({parentName:"p"},{href:"https://middlemanapp.com/jp/basics/upgrade-v4/"}),"v4 へのアップグレード"),"にもあるように、",Object(r.a)("inlineCode",{parentName:"p"},"partials_dir"),"の設定オプションが無くなっています。\n部分テンプレートの指定は",Object(r.a)("inlineCode",{parentName:"p"},"source"),"からの相対パスで",Object(r.a)("inlineCode",{parentName:"p"},"partial 'partials/my_partial'"),"のように書くことになります。"),Object(r.a)("p",null,"また、特に指定をしなければ",Object(r.a)("inlineCode",{parentName:"p"},"partials"),"以下もビルド対象となってしまうので、ビルド対象外として設定すると良いです。"),Object(r.a)("pre",null,Object(r.a)("code",s()({parentName:"pre"},{className:"hljs language-ruby"}),"ignore ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-string"}),"'partials/*'"))),Object(r.a)("p",null,"これは",Object(r.a)("strong",{parentName:"p"},"開発時に気づきにくい罠"),"でした。"),Object(r.a)("h3",null,"記事の移行"),Object(r.a)("p",null,"元々Jekyllの記事は ",Object(r.a)("a",s()({parentName:"p"},{href:"http://jekyllrb-ja.github.io/docs/frontmatter/"}),"Front-matter")," + Markdown で書いていたので、ほぼそのままMiddleman-blogにコピーするだけで完了しました。"),Object(r.a)("h3",null,"ファイル圧縮"),Object(r.a)("p",null,"アセットを圧縮するための設定がデフォルトで用意されています。"),Object(r.a)("pre",null,Object(r.a)("code",s()({parentName:"pre"},{className:"hljs language-ruby"}),"configure ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-symbol"}),":build")," ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-keyword"}),"do"),"\n  activate ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-symbol"}),":minify_css"),"\n  activate ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-symbol"}),":minify_javascript"),"\n",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-keyword"}),"end"),"\n\nactivate ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-symbol"}),":minify_html"))),Object(r.a)("p",null,"まだやれてないですが、画像の圧縮には",Object(r.a)("a",s()({parentName:"p"},{href:"https://github.com/plasticine/middleman-imageoptim"}),"middleman-imageoptim"),"を使うと良さそうです。"),Object(r.a)("h3",null,"デプロイ"),Object(r.a)("p",null,Object(r.a)("a",s()({parentName:"p"},{href:"https://github.com/middleman-contrib/middleman-deploy"}),"middleman-deploy"),"が便利です。\n自分は",Object(r.a)("a",s()({parentName:"p"},{href:"https://pages.github.com/"}),"GitHub Pages"),"で公開しているので、",Object(r.a)("inlineCode",{parentName:"p"},"master"),"ブランチにPushして完了です。"),Object(r.a)("pre",null,Object(r.a)("code",s()({parentName:"pre"},{className:"hljs language-ruby"}),"activate ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-symbol"}),":deploy")," ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-keyword"}),"do")," ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-params"}),"|deploy|"),"\n  deploy.deploy_method = ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-symbol"}),":git"),"\n  deploy.branch = ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-string"}),"'master'")," ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-comment"}),"# default: gh-pages"),"\n  deploy.build_before = ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-literal"}),"true")," ",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-comment"}),"# default: false"),"\n",Object(r.a)("span",s()({parentName:"code"},{className:"hljs-keyword"}),"end"))),Object(r.a)("h2",null,"感想"),Object(r.a)("p",null,"控えめに言って ",Object(r.a)("a",s()({parentName:"p"},{href:"https://middlemanapp.com/jp/"}),"Middleman")," 最高でした！\nサイト作るのに必要だなと思うものがデフォルトで付いてたり拡張として用意してあって、たくさん楽できました。\nあとはRailsライクな ",Object(r.a)("a",s()({parentName:"p"},{href:"https://middlemanapp.com/jp/basics/helper_methods/"}),"ヘルパーメソッド")," も用意してあるし、とにかくハードルが低かったです。"))}j.isMDXComponent=!0;var d=t(194);a.default=function(){return l.a.createElement(d.a,null,l.a.createElement(j,null))}}}]);