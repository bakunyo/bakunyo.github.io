(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{110:function(e,a,t){"use strict";t.r(a);var n=t(0),s=t.n(n),c=t(22),l=t.n(c),p=t(62),r=t.n(p),i=t(198),o={},b="wrapper";function m(e){var a=e.components,t=r()(e,["components"]);return Object(i.a)(b,l()({},o,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"先日、 ",Object(i.a)("a",l()({parentName:"p"},{href:"https://shinjukult.netlify.com"}),"Shinjuku.LT")," というイベントで話してきたのですが、資料をつくっていなかったため当日話したこと(+α)をここに残しておこうと思います。"),Object(i.a)("p",null,"話の流れはざっくりいうと、"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},"GitHub Services を使って master マージ&自動デプロイしていたが、サービスが終了した"),Object(i.a)("li",{parentName:"ul"},"仕方なく手動デプロイしていたが、GitHub Actions で再び自動化できた"),Object(i.a)("li",{parentName:"ul"},"せっかくなので、GitHub Action をつくって公開してみた")),Object(i.a)("p",null,"という感じです。"),Object(i.a)("p",null,"作成した GitHub Action は Marketplace で公開されています 🎉\nよかったら使ってみてください。\n",Object(i.a)("a",l()({parentName:"p"},{href:"https://github.com/marketplace/actions/git-pr-release"}),"https://github.com/marketplace/actions/git-pr-release")),Object(i.a)("p",null,"以降は、 LT で話した流れに沿って内容を書きます。"),Object(i.a)("h2",null,"GitHub Services の利用と終了 🐙"),Object(i.a)("p",null,"昨年つくりはじめた個人開発のアプリで、「GitHub で master マージすると AWS CodeDeploy で自動デプロイされる」というのを GitHub Services を使ってやっていました。"),Object(i.a)("p",null,"ググるといくつも記事があがっているので、やっていた人も多かっただろうと思います。\n便利だなーとか思いながら過ごしていたのですが、4月になると GitHub Services が終了するという記事が公開されました。"),Object(i.a)("p",null,Object(i.a)("a",l()({parentName:"p"},{href:"https://developer.github.com/changes/2018-04-25-github-services-deprecation/"}),"Announcing the deprecation of GitHub Services")),Object(i.a)("p",null,"終了することを知った後も特に何もせず、いつかなんとかしようとか思ってたら、いつの間にかサービスが終了し、気づいたら手動デプロイが必要な状況になっていました 😇"),Object(i.a)("h2",null,"GitHub Actions の発表 🔈"),Object(i.a)("p",null,"2018年の GitHub Universe で、 GitHub Actions という新機能が発表されました。\n",Object(i.a)("a",l()({parentName:"p"},{href:"https://github.blog/jp/2018-10-24-action-demos/"}),"GitHub Actions： みなさんが開発し、GitHubで実行"),"\n",Object(i.a)("img",l()({parentName:"p"},{src:"https://bakunote-images.s3-ap-northeast-1.amazonaws.com/storage/2019/02/26/github-universe.png",alt:"GitHub Universe 2018"}))),Object(i.a)("p",null,"ワークフローの自動化とカスタマイズができるようになるもので、現在（2019/02/26時点）は制限付きパブリックベータ版として公開されています。"),Object(i.a)("p",null,"本公開前に色々と変更が行われる可能性はありますが、以下のページから登録すれば誰でも利用が可能です。\n",Object(i.a)("a",l()({parentName:"p"},{href:"https://github.com/features/actions/signup"}),"Register for GitHub Actions Beta")),Object(i.a)("p",null,"また、ドキュメントは以下のあたりに公開されています。\n",Object(i.a)("a",l()({parentName:"p"},{href:"https://developer.github.com/actions/"}),"https://developer.github.com/actions/")),Object(i.a)("h2",null,"自動デプロイの復活 🎉"),Object(i.a)("p",null,"GitHub Actions で、割と楽に自動デプロイな生活に戻れそうだったので、使ってみることにしました。"),Object(i.a)("p",null,"ベータ版の利用登録をすると、ヘッダーに ",Object(i.a)("strong",{parentName:"p"},"Actions")," タブが追加されます。\nワークフローの定義は GUI またはソースエディタで、わりかし簡単につくれます。\n",Object(i.a)("img",l()({parentName:"p"},{src:"https://bakunote-images.s3-ap-northeast-1.amazonaws.com/storage/2019/02/26/workflow.gif",alt:"workflow editor"}))),Object(i.a)("p",null,"定義されたイベントを起点に、アクションを組み合わせていきます。\n",Object(i.a)("a",l()({parentName:"p"},{href:"https://github.com/actions/aws"}),"awscli を実行できるアクション")," は既に用意されており、以下のようにワークフローを定義しました。"),Object(i.a)("pre",null,Object(i.a)("code",l()({parentName:"pre"},{className:"hljs language-bash"}),"workflow ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"Release workflow"')," {\n  on = ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"release"'),"\n  resolves = [",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"AWS CodeDeploy"'),"]\n}\n\naction ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"AWS CodeDeploy"')," {\n  uses = ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"actions/aws/cli@efb074ae4510f2d12c7801e4461b65bf5e8317e6"'),"\n  args = ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"deploy create-deployment --application-name {アプリ名} --deployment-group-name {デプロイグループ名} --github-location repository=',Object(i.a)("span",l()({parentName:"span"},{className:"hljs-variable"}),"${GITHUB_REPOSITORY}"),",commitId=",Object(i.a)("span",l()({parentName:"span"},{className:"hljs-variable"}),"${GITHUB_SHA}"),'"'),"\n  secrets = [",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"AWS_ACCESS_KEY_ID"'),", ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"AWS_SECRET_ACCESS_KEY"'),"]\n  env = {\n    AWS_DEFAULT_REGION = ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"ap-northeast-1"'),"\n  }\n}")),Object(i.a)("p",null,"workflow ブロックの ",Object(i.a)("inlineCode",{parentName:"p"},"on")," で発火イベントを指定します。今回は「master マージ」ではなく「Release タグを Publish」を起点に workflow を実行するようにしました。"),Object(i.a)("p",null,"Release タグが draft でなく publish したらイベントが発火します。\n一度 draft に戻して再度 publish しても発火するので、地味に便利です。"),Object(i.a)("p",null,"AWS のアクションの方は、 awscli コマンドの引数を ",Object(i.a)("inlineCode",{parentName:"p"},"args")," に指定します。\nソースを見るとわかりますが、 Dockerfile の ENTRYPOINT で aws コマンドを実行するようになっています。\n",Object(i.a)("inlineCode",{parentName:"p"},"secrets")," の値はGUIで指定します。"),Object(i.a)("p",null,"CodeDeploy 側は今までも使ってたので、特に変更なくスムーズにデプロイできました 💪"),Object(i.a)("h2",null,"GitHub Action の作成と公開 🚀"),Object(i.a)("p",null,"今回、 LT 発表するにあたりもう少しネタが欲しいと思っていたので、 GitHub Action をつくることにしました。"),Object(i.a)("p",null,"自分でリリースフローつくる時にほぼ毎回お世話になっている ",Object(i.a)("a",l()({parentName:"p"},{href:"https://github.com/motemen/git-pr-release"}),"git-pr-release")," を GitHub Action で実行できるようにしてみました。"),Object(i.a)("p",null,"再掲になりますが、以下の GitHub Marketplace のページにあがっています。\n",Object(i.a)("a",l()({parentName:"p"},{href:"https://github.com/marketplace/actions/git-pr-release"}),"https://github.com/marketplace/actions/git-pr-release")),Object(i.a)("p",null,Object(i.a)("img",l()({parentName:"p"},{src:"https://bakunote-images.s3-ap-northeast-1.amazonaws.com/storage/2019/02/26/marketplace.png",alt:"GitHub Marketplace - git-pr-release"}))),Object(i.a)("h3",null,"使い方 📝"),Object(i.a)("p",null,"ワークフローのサンプルはこんな感じです。"),Object(i.a)("pre",null,Object(i.a)("code",l()({parentName:"pre"},{className:"hljs language-bash"}),"workflow ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"Create PR to master"')," {\n  resolves = [",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"git-pr-release"'),"]\n  on = ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"push"'),"\n}\n\naction ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"Filter branch"')," {\n  uses = ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"actions/bin/filter@24a566c2524e05ebedadef0a285f72dc9b631411"'),"\n  args = ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"branch staging"'),"\n}\n\naction ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"git-pr-release"')," {\n  uses = ",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"bakunyo/git-pr-release-action@master"'),"\n  needs = [",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"Filter branch"'),"]\n  secrets = [",Object(i.a)("span",l()({parentName:"code"},{className:"hljs-string"}),'"GITHUB_TOKEN"'),"]\n}")),Object(i.a)("p",null,Object(i.a)("inlineCode",{parentName:"p"},"push")," イベントを起点にワークフローを実行し、",Object(i.a)("inlineCode",{parentName:"p"},"Filter branch")," で「staging ブランチの時」に限定しています。"),Object(i.a)("p",null,Object(i.a)("a",l()({parentName:"p"},{href:"https://github.com/motemen/git-pr-release"}),"git-pr-release")," をセットアップする時に Personal access token を発行した覚えのある方もいると思いますが、このワークフローでは不要です。\nGitHub Actions では、GitHub APIをコールするための ",Object(i.a)("inlineCode",{parentName:"p"},"GITHUB_TOKEN")," を",Object(i.a)("strong",{parentName:"p"},"あらかじめ用意してくれます"),"。\nなので、Secrets を指定する所でチェックするだけでOKです。"),Object(i.a)("p",null,Object(i.a)("img",l()({parentName:"p"},{src:"https://bakunote-images.s3-ap-northeast-1.amazonaws.com/storage/2019/02/26/secrets.gif",alt:"secrets GITHUB_TOKEN"}))),Object(i.a)("h3",null,"ステータス「neutral」について 😐"),Object(i.a)("p",null,"多くのCIサービスと同じように、GitHubのワークフローでも実行コマンドの終了ステータスが ",Object(i.a)("inlineCode",{parentName:"p"},"0")," なら成功、そうでなければ失敗となり、フローが中断されます。"),Object(i.a)("p",null,"上記のサンプルでブランチが ",Object(i.a)("inlineCode",{parentName:"p"},"staging")," 以外だったらどうなるか？\n",Object(i.a)("a",l()({parentName:"p"},{href:"https://developer.github.com/actions/creating-github-actions/accessing-the-runtime-environment/#exit-codes-and-statuses"}),"GitHub Actionではneutral(78)というステータスが用意されました"),"。"),Object(i.a)("p",null,Object(i.a)("img",l()({parentName:"p"},{src:"https://bakunote-images.s3-ap-northeast-1.amazonaws.com/storage/2019/02/26/branch-filter.png",alt:"neutral - branch filter"}))),Object(i.a)("p",null,"終了ステータスが ",Object(i.a)("inlineCode",{parentName:"p"},"neutral")," だと、 workflow は成功でも失敗でもなく、 Pull Request のマージを妨げません。\n自作の GitHub Action をつくる際、適切なタイミングがあれば使ってみると良さそうです。"),Object(i.a)("h3",null,"GitHub Action のつくりかた :man_cook:"),Object(i.a)("p",null,Object(i.a)("a",l()({parentName:"p"},{href:"https://developer.github.com/actions/creating-github-actions/creating-a-new-action/"}),"公式ドキュメント")," にわかりやすい説明が書いてあります。\nまた、",Object(i.a)("a",l()({parentName:"p"},{href:"https://github.com/marketplace?type=actions"}),"既に公開されているアクション")," も参考になります。"),Object(i.a)("p",null,"今回つくった Action は ",Object(i.a)("a",l()({parentName:"p"},{href:"https://github.com/bakunyo/git-pr-release-action"}),"こちら")," です。 README 除くと20行くらいしかないです。 Marketplace に表示される時のアイコンや色を Dockerfile の LABEL で指定できます。"),Object(i.a)("p",null,"形式を満たしてリポジトリにあげると、 Marketplace に Publish するボタンが表示されます。\n",Object(i.a)("img",l()({parentName:"p"},{src:"https://bakunote-images.s3-ap-northeast-1.amazonaws.com/storage/2019/02/26/publish-marketplace.png",alt:"publish marketplace"}))),Object(i.a)("p",null,"必要事項が整っているかもチェックしてくれるようです。"),Object(i.a)("p",null,Object(i.a)("img",l()({parentName:"p"},{src:"https://bakunote-images.s3-ap-northeast-1.amazonaws.com/storage/2019/02/26/check-action.png",alt:"validate action"}))),Object(i.a)("p",null,"公開されている GitHub Actions はまだまだ数が少ない（現在132個）ので、やってみたい人は今が狙い目かもしれないです。"),Object(i.a)("h2",null,"vs CIサービス？ ⛈"),Object(i.a)("p",null,"公開されている GitHub Actions をみると、 Test や Lint を実行するものが多く見られます。\n現時点で CI サービスに取って代わるかというと、まだまだそんな感じではないですが、1〜2年後はどうなってるかわからないと思います。"),Object(i.a)("p",null,"そういう視点でみると、今後の機能としてエラー通知、Services（DBとか）、Cache、Artifacts あたりが追加されそうな気がしました。\n今後どうなっていくかはわかりませんが、本公開が楽しみです。"))}m.isMDXComponent=!0;var u=t(199);a.default=function(){return s.a.createElement(u.a,null,s.a.createElement(m,null))}}}]);